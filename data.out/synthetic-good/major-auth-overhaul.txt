refactor(auth): migrate authentication system to OAuth 2.1 with PKCE

Complete overhaul of authentication infrastructure to support modern
security requirements and prepare for upcoming PSD2 compliance
requirements.

Core Changes:
- Implement OAuth 2.1 flow with PKCE challenge
- Replace legacy session-based auth with JWT infrastructure
- Add support for multiple identity providers (Google, GitHub, Azure AD)
- Implement MFA with TOTP and WebAuthn support
- Add rate limiting and brute force protection

Security Improvements:
- Remove deprecated grant types (implicit flow, resource owner password)
- Implement strict CORS with dynamic origin validation
- Add automatic session invalidation for security events
- Configure secure cookie attributes (SameSite=Strict, Secure)
- Implement automatic key rotation (24h for signing, 12h for encryption)

Performance Impact:
- Auth request latency: 450ms -> 120ms
- Token validation: 85ms -> 15ms
- Peak memory usage: -35% (due to stateless tokens)
- Database load: -65% (cached token validation)

Monitoring & Observability:
- Added detailed auth flow tracing with OpenTelemetry
- New metrics for auth success/failure rates
- Anomaly detection for unusual auth patterns
- Geographic access pattern monitoring
- Failed attempt tracking with IP correlation

Breaking Changes:
1. API Changes:
   - /auth/* endpoints now require PKCE challenge
   - Token format changed (see docs/auth/TOKEN_FORMAT.md)
   - New rate limiting headers required

2. Client Changes:
   - Updated SDK versions required (see compatibility matrix)
   - New client registration process
   - Legacy API endpoints deprecated (6-month migration period)

Migration Strategy:
1. Phase 1 - Preparation (Week 1-2):
   - Deploy new auth infrastructure in parallel
   - Begin client registration process
   - Update documentation and client SDKs

2. Phase 2 - Gradual Migration (Week 3-8):
   - Migrate clients by team (schedule in
     docs/auth/MIGRATION_SCHEDULE.md)
   - Monitor error rates and performance metrics
   - Maintain backward compatibility layer

3. Phase 3 - Legacy Cleanup (Week 9-12):
   - Remove legacy auth system
   - Clean up old database tables
   - Archive unused credentials

Testing & Validation:
- 2,500+ new test cases added
- Penetration testing completed (report:
  docs/security/PENTEST_2024_Q1.pdf)
- Load tested to 10k auth req/sec
- Compliance audit passed (SOC2, ISO27001)

Documentation:
- Full API documentation: docs/auth/README.md
- Migration guides: docs/auth/migration/*
- Client SDKs: github.com/org/auth-sdks
- Architecture diagrams: docs/auth/architecture/*

Rollback Plan:
Automated rollback procedure in place:
1. Revert infrastructure changes (terraform/auth/rollback.tf)
2. Restore database snapshot
3. Switch DNS records
Maximum estimated downtime: 5 minutes

Related Issues:
- SEC-1234: OAuth 2.1 Migration Plan
- SEC-1235: MFA Implementation
- SEC-1236: Rate Limiting Design
- SEC-1237: Client SDK Updates

Team: @alice @bob @charlie
Security Review: @security-team
Architecture Review: @arch-board
